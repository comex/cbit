#!/usr/bin/env python
import sys, os, glob
sys.path.append(os.path.join(os.path.dirname(sys.argv[0]), 'script'))
import mconfig
settings = mconfig.settings_root
settings.package_unix_name.value = 'cbit'

c = settings.host_machine().c_tools()
c.cc.required()


mconfig.parse_args()
####################################

emitter = settings.emitter

settings.c_includes = ['(src)/']

test_phonies = []

def do_test(execname, srcs, *args, **kwargs):
    my_settings = settings.specialize(out=os.path.join(settings.out, '_'+execname))
    ename = os.path.join(settings.out, execname)
    mconfig.build_and_link_c_objs(emitter, settings.host_machine(), my_settings, 'exec', ename, srcs, *args, **kwargs)
    phonyname = 'test-' + execname
    out_phonyname = os.path.join(settings.out, phonyname)
    test_phonies.append(out_phonyname)
    emitter.add_command(my_settings, [out_phonyname], [ename, 'script/run-test.py', srcs[0]],
                        [['python', 'script/run-test.py', srcs[0], ename],
                         ['touch', out_phonyname]],
                        expand=False)
    emitter.add_command(my_settings, [phonyname], [out_phonyname], [], expand=False, phony=True)

do_test('htab', ['test/test-htab.c'])
do_test('htab-cpp', ['test/test-htab.c'], '-x c++')
do_test('vec', ['test/test-vec.c', 'cbit/vec.c'])
do_test('vec-cpp', ['test/test-vec.c', 'cbit/vec.c'], '-x c++')

emitter.add_command(settings, ['all'], list(emitter.all_outs) + test_phonies, [], phony=True)
emitter.set_default_rule('all')

mconfig.finish_and_emit()
